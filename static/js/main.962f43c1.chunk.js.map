{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","initialOrder","isStarted","actualOrder","start","setState","sortAlphabetically","sort","reverseItem","reverse","reset","lengthSort","a","b","length","this","className","map","good","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAe,CACbC,aAAa,GAAD,OAAMH,GAClBI,WAAW,EACXC,YAAY,GAAD,OAAML,I,EAGnBM,MAAQ,WACN,EAAKC,SAAS,CAAEH,WAAW,K,EAG7BI,mBAAqB,WACnB,EAAKD,UAAS,SAACL,GAAD,MAAY,CACxBG,YAAa,YAAIH,EAAMG,aAAaI,Y,EAIxCC,YAAc,WACZ,EAAKH,UAAS,SAACL,GAAD,MAAY,CACxBG,YAAa,YAAIH,EAAMG,aAAaM,e,EAIxCC,MAAQ,WACN,EAAKL,UAAS,SAACL,GAAD,MAAY,CACxBG,YAAY,YAAKH,EAAMC,mB,EAI3BU,WAAa,WACX,EAAKN,UAAS,SAACL,GAAD,MAAY,CACxBG,YAAa,YAAIH,EAAMG,aAAaI,MAAK,SAACK,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,e,4CAIpE,WACE,MAAmCC,KAAKf,MAAhCE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,YAEnB,OACE,sBAAKa,UAAU,MAAf,UACE,uCACCd,GACC,6BACGC,EAAYc,KAAI,SAAAC,GAAI,OACnB,6BACGA,GADMA,SAMbhB,GACA,wBACEiB,KAAK,SACLH,UAAU,SACVI,QAASL,KAAKX,MAHhB,mBAQDF,GACC,gCACE,wBACEiB,KAAK,SACLH,UAAU,SACVI,QAASL,KAAKP,YAHhB,qBAOA,wBACEW,KAAK,SACLH,UAAU,SACVI,QAASL,KAAKT,mBAHhB,iCAOA,wBACEa,KAAK,SACLH,UAAU,SACVI,QAASL,KAAKL,MAHhB,mBAOA,wBACES,KAAK,SACLH,UAAU,SACVI,QAASL,KAAKJ,WAHhB,sC,GAlFMU,IAAMC,WAgGTvB,ICnHfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.962f43c1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  initialOrder: string[];\n  actualOrder: string[];\n  isStarted: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    initialOrder: [...goodsFromServer],\n    isStarted: false,\n    actualOrder: [...goodsFromServer],\n  };\n\n  start = () => {\n    this.setState({ isStarted: true });\n  };\n\n  sortAlphabetically = () => {\n    this.setState((state) => ({\n      actualOrder: [...state.actualOrder].sort(),\n    }));\n  };\n\n  reverseItem = () => {\n    this.setState((state) => ({\n      actualOrder: [...state.actualOrder].reverse(),\n    }));\n  };\n\n  reset = () => {\n    this.setState((state) => ({\n      actualOrder: [...state.initialOrder],\n    }));\n  };\n\n  lengthSort = () => {\n    this.setState((state) => ({\n      actualOrder: [...state.actualOrder].sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  render() {\n    const { isStarted, actualOrder } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isStarted && (\n          <ul>\n            {actualOrder.map(good => (\n              <li key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        )}\n        {!isStarted && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.start}\n          >\n            Start\n          </button>\n        )}\n        {isStarted && (\n          <div>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.reverseItem}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.lengthSort}\n            >\n              Sort by length\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}